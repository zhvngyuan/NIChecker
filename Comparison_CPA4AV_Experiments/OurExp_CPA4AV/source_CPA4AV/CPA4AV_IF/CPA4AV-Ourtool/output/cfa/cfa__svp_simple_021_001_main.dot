digraph svp_simple_021_001_main {
1 [shape="circle" label="N1\n38"]
61 [shape="circle" label="N61\n37"]
3 [shape="circle" label="N3\n19"]
4 [shape="circle" label="N4\n18"]
5 [shape="circle" label="N5\n17"]
8 [shape="doublecircle" label="N8\n14"]
10 [shape="diamond" label="N10\n11"]
11 [shape="circle" label="N11\n13"]
13 [shape="circle" label="N13\n7"]
14 [shape="circle" label="N14\n10"]
12 [shape="circle" label="N12\n4"]
19 [shape="circle" label="N19\n3"]
15 [shape="circle" label="N15\n6"]
0 [shape="circle" label="N0\n12"]
61 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">61</td><td align="left">void idlerun();</td></tr><tr><td align="right">62</td><td align="left">void enable_isr(int);</td></tr><tr><td align="right">63</td><td align="left">void disable_isr(int);</td></tr><tr><td align="right">64</td><td align="left">int rand();</td></tr><tr><td align="right">65</td><td align="left">void init();</td></tr><tr><td align="right">66</td><td align="left">void svp_simple_021_001_init();</td></tr><tr><td align="right">67</td><td align="left">void svp_simple_021_001_RecvTcBlock();</td></tr><tr><td align="right">68</td><td align="left">volatile int svp_simple_021_001_tc_block_rcvd_bytes_ch1 = 0;</td></tr><tr><td align="right">69</td><td align="left">volatile int svp_simple_021_001_tc_block_rcvd_bytes_ch2 = 0;</td></tr><tr><td align="right">70</td><td align="left">volatile int svp_simple_021_001_tc_block_rcvd_bytes = 0;</td></tr><tr><td align="right">71</td><td align="left">volatile int svp_simple_021_001_tc_chan1_buff[10] = &#123;  &#125;;</td></tr><tr><td align="right">72</td><td align="left">volatile int svp_simple_021_001_tc_chan2_buff[10] = &#123;  &#125;;</td></tr><tr><td align="right">73</td><td align="left">volatile int *svp_simple_021_001_tc_buff_p = 0;</td></tr><tr><td align="right">74</td><td align="left">struct svp_simple_021_001_tc_block_data &#123;   int type;   int id;   int valid_len; &#125; ;</td></tr><tr><td align="right">75</td><td align="left">void svp_simple_021_001_main();</td></tr><tr><td align="right">76</td><td align="left">void svp_simple_001_001_isr_1();</td></tr><tr><td align="right">77</td><td align="left">Function start dummy edge</td></tr><tr><td align="right">2</td><td align="left">struct svp_simple_021_001_tc_block_data tc_block;</td></tr></table>>]
61 -> 3[label=""]
5 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">5</td><td align="left">int ichan;</td></tr><tr><td align="right">6</td><td align="left">for</td></tr><tr><td align="right">7</td><td align="left">ichan = 0;</td></tr></table>>]
5 -> 8[label=""]
14 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">14</td><td align="left">svp_simple_021_001_tc_buff_p = svp_simple_021_001_tc_chan2_buff;</td></tr><tr><td align="right">17</td><td align="left">svp_simple_021_001_tc_block_rcvd_bytes = svp_simple_021_001_tc_block_rcvd_bytes_ch2;</td></tr><tr><td align="right">18</td><td align="left"></td></tr></table>>]
14 -> 12[label=""]
19 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">19</td><td align="left">tc_block.id = *(svp_simple_021_001_tc_buff_p + 4);</td></tr><tr><td align="right">20</td><td align="left">tc_block.valid_len = *(svp_simple_021_001_tc_buff_p + 5);</td></tr><tr><td align="right">21</td><td align="left"></td></tr><tr><td align="right">9</td><td align="left">ichan = ichan + 1;</td></tr></table>>]
19 -> 8[label=""]
15 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">15</td><td align="left">svp_simple_021_001_tc_block_rcvd_bytes = svp_simple_021_001_tc_block_rcvd_bytes_ch1;</td></tr><tr><td align="right">16</td><td align="left"></td></tr></table>>]
15 -> 12[label=""]
1 -> 61 [label="INIT GLOBAL VARS" fontname="Courier New"]
100001 [shape="component" label="svp_simple_021_001_init"]
3 -> 100001 [label="svp_simple_021_001_init();" fontname="Courier New"]
100001 -> 4 [label="" fontname="Courier New"]
100002 [shape="component" label="svp_simple_021_001_RecvTcBlock"]
4 -> 100002 [label="svp_simple_021_001_RecvTcBlock();" fontname="Courier New"]
100002 -> 5 [label="" fontname="Courier New"]
8 -> 10 [label="[ichan < 2]" fontname="Courier New"]
8 -> 11 [label="[!(ichan < 2)]" fontname="Courier New"]
10 -> 13 [label="[ichan == 0]" fontname="Courier New"]
10 -> 14 [label="[!(ichan == 0)]" fontname="Courier New"]
12 -> 19 [label="tc_block.type = *(svp_simple_021_001_tc_buff_p + 2);" fontname="Courier New"]
13 -> 15 [label="svp_simple_021_001_tc_buff_p = svp_simple_021_001_tc_chan1_buff;" fontname="Courier New"]
11 -> 0 [label="default return" fontname="Courier New"]
}