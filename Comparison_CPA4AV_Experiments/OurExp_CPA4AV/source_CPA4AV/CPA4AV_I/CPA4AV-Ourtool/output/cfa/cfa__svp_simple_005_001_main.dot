digraph svp_simple_005_001_main {
1 [shape="circle" label="N1\n31"]
41 [shape="circle" label="N41\n30"]
2 [shape="circle" label="N2\n20"]
3 [shape="circle" label="N3\n19"]
5 [shape="doublecircle" label="N5\n17"]
7 [shape="circle" label="N7\n10"]
8 [shape="diamond" label="N8\n16"]
19 [shape="circle" label="N19\n15"]
18 [shape="circle" label="N18\n13"]
21 [shape="circle" label="N21\n12"]
20 [shape="circle" label="N20\n14"]
9 [shape="circle" label="N9\n9"]
10 [shape="doublecircle" label="N10\n8"]
12 [shape="diamond" label="N12\n5"]
13 [shape="circle" label="N13\n7"]
16 [shape="diamond" label="N16\n4"]
14 [shape="circle" label="N14\n1"]
11 [shape="circle" label="N11\n0"]
15 [shape="circle" label="N15\n3"]
0 [shape="circle" label="N0\n11"]
41 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">41</td><td align="left">void idlerun();</td></tr><tr><td align="right">42</td><td align="left">void enable_isr(int);</td></tr><tr><td align="right">43</td><td align="left">void disable_isr(int);</td></tr><tr><td align="right">44</td><td align="left">int rand();</td></tr><tr><td align="right">45</td><td align="left">void init();</td></tr><tr><td align="right">46</td><td align="left">volatile int svp_simple_005_001_global_condition = 0;</td></tr><tr><td align="right">47</td><td align="left">volatile int svp_simple_005_001_global_var = 0;</td></tr><tr><td align="right">48</td><td align="left">void svp_simple_005_001_main();</td></tr><tr><td align="right">49</td><td align="left">void svp_simple_001_001_isr_1();</td></tr><tr><td align="right">50</td><td align="left">Function start dummy edge</td></tr></table>>]
41 -> 2[label=""]
3 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">3</td><td align="left">for</td></tr><tr><td align="right">4</td><td align="left">int i = 0;</td></tr></table>>]
3 -> 5[label=""]
13 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">13</td><td align="left"></td></tr><tr><td align="right">6</td><td align="left">i = i + 1;</td></tr></table>>]
13 -> 5[label=""]
15 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">15</td><td align="left">svp_simple_005_001_global_var = 1;</td></tr><tr><td align="right">17</td><td align="left"></td></tr></table>>]
15 -> 14[label=""]
1 -> 41 [label="INIT GLOBAL VARS" fontname="Courier New"]
100002 [shape="component" label="init"]
2 -> 100002 [label="init();" fontname="Courier New"]
100002 -> 3 [label="" fontname="Courier New"]
5 -> 7 [label="[i < 10]" fontname="Courier New"]
5 -> 8 [label="[!(i < 10)]" fontname="Courier New"]
8 -> 19 [label="[svp_simple_005_001_global_condition == 1]" fontname="Courier New"]
8 -> 18 [label="[!(svp_simple_005_001_global_condition == 1)]" fontname="Courier New"]
18 -> 21 [label="svp_simple_005_001_global_var = 5;" fontname="Courier New"]
19 -> 20 [label="svp_simple_005_001_global_var = 9;" fontname="Courier New"]
7 -> 9 [label="for" fontname="Courier New"]
10 -> 12 [label="[j < 10]" fontname="Courier New"]
10 -> 13 [label="[!(j < 10)]" fontname="Courier New"]
12 -> 16 [label="[i == 9]" fontname="Courier New"]
12 -> 14 [label="[!(i == 9)]" fontname="Courier New"]
14 -> 11 [label="" fontname="Courier New"]
16 -> 15 [label="[j == 1]" fontname="Courier New"]
16 -> 14 [label="[!(j == 1)]" fontname="Courier New"]
21 -> 0 [label="default return" fontname="Courier New"]
20 -> 18 [label="" fontname="Courier New"]
9 -> 10 [label="int j = 0;" fontname="Courier New"]
11 -> 10 [label="j = j + 1;" fontname="Courier New"]
}