digraph CFA {
1 [shape="circle" label="N1\n56"]
74 [shape="circle" label="N74\n55"]
75 [shape="circle" label="N75\n54"]
76 [shape="circle" label="N76\n53"]
77 [shape="circle" label="N77\n52"]
78 [shape="circle" label="N78\n51"]
79 [shape="circle" label="N79\n50"]
80 [shape="circle" label="N80\n49"]
81 [shape="circle" label="N81\n48"]
82 [shape="circle" label="N82\n47"]
83 [shape="circle" label="N83\n46"]
84 [shape="circle" label="N84\n45"]
85 [shape="circle" label="N85\n44"]
86 [shape="circle" label="N86\n43"]
2 [shape="circle" label="N2\n42"]
62 [shape="circle" label="N62\n3"]
63 [shape="circle" label="N63\n2"]
64 [shape="circle" label="N64\n1"]
61 [shape="circle" label="N61\n0"]
3 [shape="circle" label="N3\n41"]
4 [shape="circle" label="N4\n40"]
5 [shape="circle" label="N5\n39"]
6 [shape="circle" label="N6\n38"]
7 [shape="circle" label="N7\n37"]
66 [shape="circle" label="N66\n8"]
67 [shape="circle" label="N67\n7"]
68 [shape="circle" label="N68\n6"]
69 [shape="circle" label="N69\n5"]
70 [shape="doublecircle" label="N70\n4"]
73 [shape="circle" label="N73\n3"]
65 [shape="circle" label="N65\n2"]
8 [shape="circle" label="N8\n36"]
9 [shape="circle" label="N9\n35"]
10 [shape="circle" label="N10\n34"]
11 [shape="circle" label="N11\n33"]
12 [shape="doublecircle" label="N12\n32"]
15 [shape="circle" label="N15\n31"]
19 [shape="circle" label="N19\n30"]
20 [shape="doublecircle" label="N20\n29"]
23 [shape="circle" label="N23\n28"]
27 [shape="circle" label="N27\n27"]
28 [shape="circle" label="N28\n26"]
29 [shape="doublecircle" label="N29\n25"]
32 [shape="circle" label="N32\n24"]
36 [shape="circle" label="N36\n23"]
37 [shape="doublecircle" label="N37\n22"]
40 [shape="circle" label="N40\n21"]
0 [shape="circle" label="N0\n20"]
39 [shape="diamond" label="N39\n19"]
41 [shape="circle" label="N41\n16"]
38 [shape="circle" label="N38\n15"]
42 [shape="circle" label="N42\n18"]
43 [shape="circle" label="N43\n17"]
31 [shape="diamond" label="N31\n14"]
33 [shape="circle" label="N33\n11"]
30 [shape="circle" label="N30\n10"]
34 [shape="circle" label="N34\n13"]
35 [shape="circle" label="N35\n12"]
22 [shape="diamond" label="N22\n9"]
24 [shape="circle" label="N24\n6"]
21 [shape="circle" label="N21\n5"]
25 [shape="circle" label="N25\n8"]
26 [shape="circle" label="N26\n7"]
14 [shape="diamond" label="N14\n4"]
16 [shape="circle" label="N16\n1"]
13 [shape="circle" label="N13\n0"]
17 [shape="circle" label="N17\n3"]
18 [shape="circle" label="N18\n2"]
59 [shape="circle" label="N59\n2"]
60 [shape="circle" label="N60\n1"]
56 [shape="circle" label="N56\n0"]
72 [shape="circle" label="N72\n1"]
71 [shape="circle" label="N71\n0"]
node [shape="circle"]
subgraph cluster_idlerun {
label="idlerun()"
66 -> 67 [label="Function start dummy edge"]
67 -> 68 [label="int i = 0;"]
68 -> 69 [label="for"]
69 -> 70 [label="i = 0;"]
70 -> 72 [label="[i <= 10]"]
70 -> 73 [label="[!(i <= 10)]"]
73 -> 65 [label="default return"]
72 -> 71 [label=""]
71 -> 70 [label="i = i + 1;"]}
subgraph cluster_init {
label="init()"
62 -> 63 [label="Function start dummy edge"]
63 -> 64 [label="enable_isr(-1);"]
64 -> 61 [label="default return"]}
subgraph cluster_svp_simple_001_001_isr_1 {
label="svp_simple_001_001_isr_1()"
}
subgraph cluster_svp_simple_001_001_isr_2 {
label="svp_simple_001_001_isr_2()"
59 -> 60 [label="svp_simple_003_001_global_flag = 1;"]
60 -> 56 [label="default return"]}
subgraph cluster_svp_simple_003_001_main {
label="svp_simple_003_001_main()"
1 -> 74 [label="INIT GLOBAL VARS"]
74 -> 75 [label="void idlerun();"]
75 -> 76 [label="void enable_isr(int);"]
76 -> 77 [label="void disable_isr(int);"]
77 -> 78 [label="int rand();"]
78 -> 79 [label="void init();"]
79 -> 80 [label="volatile int svp_simple_003_001_global_var1 = 0;"]
80 -> 81 [label="volatile int svp_simple_003_001_global_var2 = 0;"]
81 -> 82 [label="volatile int svp_simple_003_001_global_flag = 1;"]
82 -> 83 [label="volatile int svp_simple_003_001_global_flag1 = 0;"]
83 -> 84 [label="void svp_simple_003_001_main();"]
84 -> 85 [label="void svp_simple_001_001_isr_1();"]
85 -> 86 [label="void svp_simple_001_001_isr_2();"]
86 -> 2 [label="Function start dummy edge"]
2 -> 3 [label="init();" style="dotted" arrowhead="empty"]
3 -> 4 [label="int reader1;"]
4 -> 5 [label="int reader2;"]
5 -> 6 [label="int reader3;"]
6 -> 7 [label="int reader4;"]
7 -> 8 [label="idlerun();" style="dotted" arrowhead="empty"]
8 -> 9 [label="disable_isr(1);"]
9 -> 10 [label="disable_isr(2);"]
10 -> 11 [label="for"]
11 -> 12 [label="int i = 0;"]
12 -> 14 [label="[i < 100]"]
12 -> 15 [label="[!(i < 100)]"]
15 -> 19 [label="for"]
19 -> 20 [label="int j = 100;"]
20 -> 22 [label="[j > 0]"]
20 -> 23 [label="[!(j > 0)]"]
23 -> 27 [label="enable_isr(1);"]
27 -> 28 [label="for"]
28 -> 29 [label="int i__1 = 0;"]
29 -> 31 [label="[i__1 < 100]"]
29 -> 32 [label="[!(i__1 < 100)]"]
32 -> 36 [label="for"]
36 -> 37 [label="int j__1 = 100;"]
37 -> 39 [label="[j__1 > 0]"]
37 -> 40 [label="[!(j__1 > 0)]"]
40 -> 0 [label="default return"]
39 -> 42 [label="[j__1 == 99]"]
39 -> 41 [label="[!(j__1 == 99)]"]
41 -> 38 [label=""]
38 -> 37 [label="j__1 = j__1 - 1;"]
42 -> 43 [label="reader2 = svp_simple_003_001_global_var1;"]
43 -> 41 [label=""]
31 -> 34 [label="[i__1 == 99]"]
31 -> 33 [label="[!(i__1 == 99)]"]
33 -> 30 [label=""]
30 -> 29 [label="i__1 = i__1 + 1;"]
34 -> 35 [label="reader1 = svp_simple_003_001_global_var1;"]
35 -> 33 [label=""]
22 -> 25 [label="[j == 99]"]
22 -> 24 [label="[!(j == 99)]"]
24 -> 21 [label=""]
21 -> 20 [label="j = j - 1;"]
25 -> 26 [label="reader4 = svp_simple_003_001_global_var2;"]
26 -> 24 [label=""]
14 -> 17 [label="[i == 99]"]
14 -> 16 [label="[!(i == 99)]"]
16 -> 13 [label=""]
13 -> 12 [label="i = i + 1;"]
17 -> 18 [label="reader3 = svp_simple_003_001_global_var2;"]
18 -> 16 [label=""]}
2 -> 62 [label="init()"]
61 -> 3 [label="Return edge from init to svp_simple_003_001_main: init();"]
7 -> 66 [label="idlerun()"]
65 -> 59 [label="Return edge from idlerun to svp_simple_001_001_isr_2: idlerun();"]
65 -> 8 [label="Return edge from idlerun to svp_simple_003_001_main: idlerun();"]}